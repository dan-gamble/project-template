/*
|--------------------------------------------------------------------------
| Grid
|--------------------------------------------------------------------------
|
*/

/*
|--------------------------------------------------------------------------
| Grid - Container
|--------------------------------------------------------------------------
| Creates the container for constraining content
|
*/
@mixin Grid_Container() {
  /* Add $Grid_Gutter to the container as the 'container' should be the size
  /* of the content not the actual div
  /* ------------------------ */
  margin-right: auto;
  margin-left: @margin-right;
  max-width: calc($Grid_Container + $Grid_Gutter);
  padding-right: calc($Grid_Gutter / 2);
  padding-left: @padding-right;
  width: 100%;

  @media (--lg) {
    max-width: calc($Grid_Container + $Grid_Gutter--lg);
    padding-right: calc($Grid_Gutter--lg / 2);
    padding-left: @padding-right;
  }
}

/*
|--------------------------------------------------------------------------
| Grid - Row
|--------------------------------------------------------------------------
| Adds negative margins to the parent element so we don't have to do
| individual resets on the first or last children and we can keep all of the
| widths consistent
|
*/
@mixin Grid_Row() {
  margin-right: -calc($Grid_Gutter / 2);
  margin-left: @margin-right;

  @media (--lg) {
    margin-right: -calc($Grid_Gutter--lg / 2);
    margin-left: @margin-right;
  }
}

/*
|--------------------------------------------------------------------------
| Grid - Column
|--------------------------------------------------------------------------
| Adds consistent spacing to stop content of columns sitting next to each
| other
|
*/
@mixin Grid_Column() {
  margin-right: calc($Grid_Gutter / 2);
  margin-left: @margin-right;

  @media (--lg) {
    margin-right: calc($Grid_Gutter--lg / 2);
    margin-left: @margin-right;
  }
}

